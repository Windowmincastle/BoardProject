//java 빌드에 필요한 플러그인을 설정한 것 이다.
plugins {
	id 'java'
	//의존성 관리툴의 버전을 명시한 것 .
	id 'org.springframework.boot' version '2.7.11'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.beyond'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
//	의존성을 가져오는 대상 저장소(repositories)가 여기에 담겨있고 여길 가서 의존성을 가져오는 것.
//	내부망에서 인터넷을 사용하기 불가한 경우에는 nexus(설치형) 레파지토리를 사용하기도 함.
	mavenCentral()
}
dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'


	//batch 의존성 추가
	implementation 'org.springframework.boot:spring-boot-starter-batch'
//	로그인 관련 시큐리티 의존성 추가
	implementation 'org.springframework.boot:spring-boot-starter-security'
//	타임리프에서 시큐리티 문법을 쓰기 위한 라이브러리
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
//	redis 의존성 추가
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
//	세션 스토리지를 redis에 저장하기 위한 의존성 추가
	implementation 'org.springframework.session:spring-session-data-redis'

}

tasks.named('test') {
	useJUnitPlatform()
}
